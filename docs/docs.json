[
  {
    "Command": [],
    "Constant": [],
    "Constructor": [],
    "Deprecated": [],
    "Field": [],
    "Function": [],
    "Method": [],
    "Variable": [
      {
        "def": "BingDaily.changeAllSpaces",
        "desc": "If `true` Spoon will set background image to all desktops (spaces)",
        "doc": "If `true` Spoon will set background image to all desktops (spaces)\n\nMacOS doesn't have nice API for it, so we're using hack - set watcher to space change and set Bing image to active space. Default: false",
        "name": "changeAllSpaces",
        "signature": "BingDaily.changeAllSpaces",
        "stripped_doc": "MacOS doesn't have nice API for it, so we're using hack - set watcher to space change and set Bing image to active space. Default: false",
        "type": "Variable"
      }
    ],
    "desc": "Use Bing daily picture as your wallpaper, automatically.",
    "doc": "Use Bing daily picture as your wallpaper, automatically.\n\nDownload: [https://github.com/Hammerspoon/Spoons/raw/master/Spoons/BingDaily.spoon.zip](https://github.com/Hammerspoon/Spoons/raw/master/Spoons/BingDaily.spoon.zip)",
    "items": [
      {
        "def": "BingDaily.changeAllSpaces",
        "desc": "If `true` Spoon will set background image to all desktops (spaces)",
        "doc": "If `true` Spoon will set background image to all desktops (spaces)\n\nMacOS doesn't have nice API for it, so we're using hack - set watcher to space change and set Bing image to active space. Default: false",
        "name": "changeAllSpaces",
        "signature": "BingDaily.changeAllSpaces",
        "stripped_doc": "MacOS doesn't have nice API for it, so we're using hack - set watcher to space change and set Bing image to active space. Default: false",
        "type": "Variable"
      }
    ],
    "name": "BingDaily",
    "stripped_doc": "\nDownload: [https://github.com/Hammerspoon/Spoons/raw/master/Spoons/BingDaily.spoon.zip](https://github.com/Hammerspoon/Spoons/raw/master/Spoons/BingDaily.spoon.zip)",
    "submodules": [],
    "type": "Module"
  },
  {
    "Command": [],
    "Constant": [],
    "Constructor": [],
    "Deprecated": [],
    "Field": [],
    "Function": [],
    "Method": [],
    "Variable": [],
    "desc": "https://github.com/chriszarate/supergenpass-lib",
    "doc": "https://github.com/chriszarate/supergenpass-lib\nhttps://gist.github.com/prashanthrajagopal/08ab39d62725c8a8716b",
    "items": [],
    "name": "EasySuperGenPass",
    "stripped_doc": "https://gist.github.com/prashanthrajagopal/08ab39d62725c8a8716b",
    "submodules": [],
    "type": "Module"
  },
  {
    "Command": [],
    "Constant": [],
    "Constructor": [],
    "Deprecated": [],
    "Field": [],
    "Function": [],
    "Method": [
      {
        "def": "MouseCircle:init()",
        "desc": "Initial setup. It's empty currently",
        "doc": "Initial setup. It's empty currently",
        "name": "init",
        "signature": "MouseCircle:init()",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "MouseCircle:toggle()",
        "desc": "Toggle visibility of circle around mouse position",
        "doc": "Toggle visibility of circle around mouse position",
        "name": "toggle",
        "signature": "MouseCircle:toggle()",
        "stripped_doc": "",
        "type": "Method"
      }
    ],
    "Variable": [],
    "desc": "Draws a circle around the mouse pointer when a hotkey is pressed",
    "doc": "Draws a circle around the mouse pointer when a hotkey is pressed\n\nDownload: [https://github.com/Hammerspoon/Spoons/raw/master/Spoons/MouseCircle.spoon.zip](https://github.com/Hammerspoon/Spoons/raw/master/Spoons/MouseCircle.spoon.zip)",
    "items": [
      {
        "def": "MouseCircle:init()",
        "desc": "Initial setup. It's empty currently",
        "doc": "Initial setup. It's empty currently",
        "name": "init",
        "signature": "MouseCircle:init()",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "MouseCircle:toggle()",
        "desc": "Toggle visibility of circle around mouse position",
        "doc": "Toggle visibility of circle around mouse position",
        "name": "toggle",
        "signature": "MouseCircle:toggle()",
        "stripped_doc": "",
        "type": "Method"
      }
    ],
    "name": "MouseCircle",
    "stripped_doc": "\nDownload: [https://github.com/Hammerspoon/Spoons/raw/master/Spoons/MouseCircle.spoon.zip](https://github.com/Hammerspoon/Spoons/raw/master/Spoons/MouseCircle.spoon.zip)",
    "submodules": [],
    "type": "Module"
  },
  {
    "Command": [],
    "Constant": [],
    "Constructor": [],
    "Deprecated": [],
    "Field": [],
    "Function": [],
    "Method": [
      {
        "def": "PushToTalk:init()",
        "desc": "Start menu and all watcher ",
        "doc": "Start menu and all watcher ",
        "name": "init",
        "signature": "PushToTalk:init()",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "PushToTalk:stop()",
        "desc": "Stop fully PushToTalk",
        "doc": "Stop fully PushToTalk",
        "name": "stop",
        "signature": "PushToTalk:stop()",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "PushToTalk:toggleStates()",
        "desc": "Toggle states from the argument in order",
        "doc": "Toggle states from the argument in order\n\nParameters:\n * states - A array of states to toggle. For example: `{'push-to-talk', 'release-to-talk'}`",
        "name": "toggleStates",
        "parameters": [
          " * states - A array of states to toggle. For example: `{'push-to-talk', 'release-to-talk'}`"
        ],
        "signature": "PushToTalk:toggleStates()",
        "stripped_doc": "",
        "type": "Method"
      }
    ],
    "Variable": [],
    "desc": "PushToTalk tool for remote conference chats",
    "doc": "PushToTalk tool for remote conference chats\n\nI'm working remotetly for last 5 years and this is the tool that makes\nconferences nice for everyone. When my conference application starts\nPushToTalk activate `push-to-talk` mode. In this mode I'm muted\nand I need to press `fn` key to temporaty unmute myself.\nAlso I have keybindings to easyly switch from `push-to-talk` to `release-to-talk` mode, in case I'm active speaker.\n\nPushToTalk has menubar with icons so when you see red circle - you shod know you're unmuted.\n\nThis is my config: `spoon.SpoonInstall:andUse(\"PushToTalk\", {start = true, config = { app_switcher = { ['zoom.us'] = 'push-to-talk' }}})` \nand binding for this `function() spoon.PushToTalk.toggleStates({'push-to-talk', 'release-to-talk'}) end`",
    "items": [
      {
        "def": "PushToTalk:init()",
        "desc": "Start menu and all watcher ",
        "doc": "Start menu and all watcher ",
        "name": "init",
        "signature": "PushToTalk:init()",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "PushToTalk:stop()",
        "desc": "Stop fully PushToTalk",
        "doc": "Stop fully PushToTalk",
        "name": "stop",
        "signature": "PushToTalk:stop()",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "PushToTalk:toggleStates()",
        "desc": "Toggle states from the argument in order",
        "doc": "Toggle states from the argument in order\n\nParameters:\n * states - A array of states to toggle. For example: `{'push-to-talk', 'release-to-talk'}`",
        "name": "toggleStates",
        "parameters": [
          " * states - A array of states to toggle. For example: `{'push-to-talk', 'release-to-talk'}`"
        ],
        "signature": "PushToTalk:toggleStates()",
        "stripped_doc": "",
        "type": "Method"
      }
    ],
    "name": "PushToTalk",
    "stripped_doc": "\nI'm working remotetly for last 5 years and this is the tool that makes\nconferences nice for everyone. When my conference application starts\nPushToTalk activate `push-to-talk` mode. In this mode I'm muted\nand I need to press `fn` key to temporaty unmute myself.\nAlso I have keybindings to easyly switch from `push-to-talk` to `release-to-talk` mode, in case I'm active speaker.\n\nPushToTalk has menubar with icons so when you see red circle - you shod know you're unmuted.\n\nThis is my config: `spoon.SpoonInstall:andUse(\"PushToTalk\", {start = true, config = { app_switcher = { ['zoom.us'] = 'push-to-talk' }}})` \nand binding for this `function() spoon.PushToTalk.toggleStates({'push-to-talk', 'release-to-talk'}) end`",
    "submodules": [],
    "type": "Module"
  }
]